{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/2103-como-colaborar-en-github-parte2/","result":{"data":{"site":{"siteMetadata":{"title":"Platzi Master"}},"markdownRemark":{"id":"8d009d22-46c5-5013-90fb-fc1df0449221","excerpt":"Ésta es la segunda parte del post Cómo colaborar en projectos usando Git y GitHub. \nSi no has visto esta primera parte, por favor revísala y después regresas a…","html":"<p>Ésta es la segunda parte del post <a href=\"../2103-como-colaborar-en-github/\">Cómo colaborar en projectos usando Git y GitHub</a>.\nSi no has visto esta primera parte, por favor revísala y después regresas a este post y podrás continuar.</p>\n<p>En esa primera parte, habíamos dejado lista la terminal y la configuración de nuestros repositorios <strong>ORIGIN</strong> y <strong>UPSTREAM</strong>; ésto lo podemos comprobar con el siguiente comando</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git remote -v</code></pre></div>\n<p>el cual nos mostrará las respectivas referencias a los repos de GitHub. Si ésta parte te causa dudas, te recomiendo revisar el video <a href=\"https://platzi.com/clases/45-git-github-2016/4086-repositorios-remotos-forked/\">Repositorios remotos forked</a> o los últimos cursos con Leonidas y Freddier.</p>\n<p>En tu equipo debe visualizarse algo como lo siguiente:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">origin \tgit@github.com:FernandoTorresL/platzimaster.github.io.git (fetch)\norigin \tgit@github.com:FernandoTorresL/platzimaster.github.io.git (push)\nupstream git@github.com:PlatziMaster/platzimaster.github.io.git (fetch)\nupstream git@github.com:PlatziMaster/platzimaster.github.io.git (push)</code></pre></div>\n<p>Ahora, me moveré a la rama <strong>develop</strong> porque en este projecto en particular, los posts nuevos deben publicarse en esta rama como se especifíca <a href=\"https://github.com/PlatziMaster/platzimaster.github.io#blogpost\">en el README.md del projecto, sección blogpost</a>. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git checkout develop</code></pre></div>\n<blockquote>\n<p>Si vas a colaborar en otro projecto, tal vez tengan instrucciones diferentes al respecto; deberás revisarlas.</p>\n</blockquote>\n<p>Tal vez ha pasado algún tiempo entre el momento que se clonó el repositorio y tuvimos la última versión de los archivos, por lo que es buena práctica verificarlo y traer los últimos commits a nuestro projecto local. Ésto lo logramos con el comando</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git pull upstream develop</code></pre></div>\n<p><img src=\"https://i.imgur.com/9Ry0lU3.png\" alt=\"Git Pull\"></p>\n<blockquote>\n<p>Recuerda, si estás colaborando en otro projecto, podrías usar otra rama distinta a <em>develop</em></p>\n</blockquote>\n<p>Git pull nos traerá los ultimos commits. En este ejemplo, puedes ver cómo mi rama <strong>develop</strong> está <em>‘atrasada’</em> por tres commits como se muestra en mi terminal.</p>\n<p>Otra forma de verificarlo si tu terminal no se ve como la mía es con <strong>git log</strong>\n<img src=\"https://i.imgur.com/ElJrOOd.png\" alt=\"Git log\"></p>\n<p><img src=\"https://i.imgur.com/5AKkvCG.png\" alt=\"GitHub\">\nTambíen en GitHub, en tu repositorio fork, aparece la leyenda <strong>This branch is 3 commits behing PlatziMaster:develop.</strong></p>\n<p>Y con <strong>git status</strong> se muestra así\n<img src=\"https://i.imgur.com/2A8l1zB.png\" alt=\"Status\"></p>\n<p>Una vez confirmaste que la rama <strong>origin/develop</strong> está tres commits atrás de la rama <strong>upstream/develop</strong>, puedo actualizarla con <strong>git push</strong>, lo cual <em>‘empujará’</em> los últimos commits a mi repo local</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git push</code></pre></div>\n<p>Y al revisar nuevamente el log, ya tenemos los últimos commits.\n<img src=\"https://i.imgur.com/QvIcFBK.png\" alt=\"Log\"></p>\n<p>Es en éste momento donde abres el editor de tu preferencia y creas/modificas los archivos necesarios. En el caso de el <strong>Blog de PlatziMaster</strong> se debe crear un archivo .md nuevo para cada post.</p>\n<p>Una vez modificados o incluidos los archivos necesarios, creas uno o varios commits…</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git add nuevo_blogpost.md\ngit commit -m &quot;Añadí un nuevo post al Blog de Platzi&quot;</code></pre></div>\n<p>…y los subes a tu GitHub</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git push</code></pre></div>\n<p>En el repositorio fork de tu GitHub, deberías ver el último commit que hayas enviado, y verás el botón <strong>New pull request</strong>, presiónalo</p>\n<p><img src=\"https://i.imgur.com/k2jA4tz.png\" alt=\"Repositorio Fork\"></p>\n<p>…y en la siguiente pantalla verás que se indica que el PR será de tu repositorio, rama develop a la misma rama pero del repositorio original. Si existiera algún problema al comparar las ramas, GitHub te lo indicaría aquí. Si todo es correcto, te mostrará en verde <strong>Able to merge</strong>. Presiona el botón verde <strong>Create pull request</strong></p>\n<p><img src=\"https://i.imgur.com/x7sgKqG.png\" alt=\"Create new PR\"></p>\n<p>Aquí podrás agregar comentarios, tus datos, o cualquier información importante que quieras incluir con tu solicitud para que la pueda leer la persona que revisará tu PR.</p>\n<p><img src=\"https://i.imgur.com/ewzkg1Z.png\" alt=\"Create new PR 2\"></p>\n<p>Después de completar la información y todo es correcto, presiona el botón verde <strong>Create pull request</strong></p>\n<p>¡Y listo! Haz enviado un <strong>Pull Request</strong> y colaborado en otro projecto. El dueño del repositorio original lo revisará y puede aceptarlo o rechazarlo y seguramente te incuirá algunos comentarios.</p>\n<hr>\n<p>Espero toda esta información te sea de mucha utilidad y no dudes en contactarme para cualquier duda; búscame como <strong>@fertorresmx</strong> en Slack (Fer Torres), <a href=\"https://twitter.com/fertorresmx\">Twitter</a>,  <a href=\"mailto:contacto@fertorresmx.com\">correo</a>, o en el sitio <a href=\"http://www.fertorresmx.com\">fertorresmx.com</a> y <strong>¡nunca pares de aprender!</strong></p>","frontmatter":{"title":"Cómo colaborar en projectos usando Git y GitHub (parte 2)","date":"March 22, 2020","description":"Continuamos con las instrucciones detalladas para crear pull request.","author":"Fernando Torres","email":"fertorresmx@gmail.com","platziUser":"fertorresmx"}}},"pageContext":{"slug":"/2020/2103-como-colaborar-en-github-parte2/","previous":{"fields":{"slug":"/2020/2103-Mi-experiencia-platzi-master/"},"frontmatter":{"title":"Mi experiencia en Platzi Master"}},"next":null}}}